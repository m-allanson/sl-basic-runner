module.exports = {
  "at-rule-blacklist": require("stylelint/lib/rules/at-rule-blacklist"),
  "at-rule-empty-line-before": require("stylelint/lib/rules/at-rule-empty-line-before"),
  "at-rule-name-case": require("stylelint/lib/rules/at-rule-name-case"),
  "at-rule-name-newline-after": require("stylelint/lib/rules/at-rule-name-newline-after"),
  "at-rule-semicolon-space-before": require("stylelint/lib/rules/at-rule-semicolon-space-before"),
  "at-rule-name-space-after": require("stylelint/lib/rules/at-rule-name-space-after"),
  "at-rule-no-unknown": require("stylelint/lib/rules/at-rule-no-unknown"),
  "at-rule-no-vendor-prefix": require("stylelint/lib/rules/at-rule-no-vendor-prefix"),
  "at-rule-property-requirelist": require("stylelint/lib/rules/at-rule-property-requirelist"),
  "at-rule-semicolon-newline-after": require("stylelint/lib/rules/at-rule-semicolon-newline-after"),
  "at-rule-whitelist": require("stylelint/lib/rules/at-rule-whitelist"),
  "block-closing-brace-empty-line-before": require("stylelint/lib/rules/block-closing-brace-empty-line-before"),
  "block-closing-brace-newline-after": require("stylelint/lib/rules/block-closing-brace-newline-after"),
  "block-closing-brace-newline-before": require("stylelint/lib/rules/block-closing-brace-newline-before"),
  "block-closing-brace-space-after": require("stylelint/lib/rules/block-closing-brace-space-after"),
  "block-closing-brace-space-before": require("stylelint/lib/rules/block-closing-brace-space-before"),
  "block-no-empty": require("stylelint/lib/rules/block-no-empty"),
  "block-opening-brace-newline-after": require("stylelint/lib/rules/block-opening-brace-newline-after"),
  "block-opening-brace-newline-before": require("stylelint/lib/rules/block-opening-brace-newline-before"),
  "block-opening-brace-space-after": require("stylelint/lib/rules/block-opening-brace-space-after"),
  "block-opening-brace-space-before": require("stylelint/lib/rules/block-opening-brace-space-before"),
  "color-hex-case": require("stylelint/lib/rules/color-hex-case"),
  "color-hex-length": require("stylelint/lib/rules/color-hex-length"),
  "color-named": require("stylelint/lib/rules/color-named"),
  "color-no-hex": require("stylelint/lib/rules/color-no-hex"),
  "color-no-invalid-hex": require("stylelint/lib/rules/color-no-invalid-hex"),
  "comment-empty-line-before": require("stylelint/lib/rules/comment-empty-line-before"),
  "comment-no-empty": require("stylelint/lib/rules/comment-no-empty"),
  "comment-whitespace-inside": require("stylelint/lib/rules/comment-whitespace-inside"),
  "comment-word-blacklist": require("stylelint/lib/rules/comment-word-blacklist"),
  "custom-media-pattern": require("stylelint/lib/rules/custom-media-pattern"),
  "custom-property-empty-line-before": require("stylelint/lib/rules/custom-property-empty-line-before"),
  "custom-property-pattern": require("stylelint/lib/rules/custom-property-pattern"),
  "declaration-bang-space-after": require("stylelint/lib/rules/declaration-bang-space-after"),
  "declaration-bang-space-before": require("stylelint/lib/rules/declaration-bang-space-before"),
  "declaration-block-no-duplicate-properties": require("stylelint/lib/rules/declaration-block-no-duplicate-properties"),
  "declaration-block-no-redundant-longhand-properties": require("stylelint/lib/rules/declaration-block-no-redundant-longhand-properties"),
  "declaration-block-no-shorthand-property-overrides": require("stylelint/lib/rules/declaration-block-no-shorthand-property-overrides"),
  "declaration-block-semicolon-newline-after": require("stylelint/lib/rules/declaration-block-semicolon-newline-after"),
  "declaration-block-semicolon-newline-before": require("stylelint/lib/rules/declaration-block-semicolon-newline-before"),
  "declaration-block-semicolon-space-after": require("stylelint/lib/rules/declaration-block-semicolon-space-after"),
  "declaration-block-semicolon-space-before": require("stylelint/lib/rules/declaration-block-semicolon-space-before"),
  "declaration-block-single-line-max-declarations": require("stylelint/lib/rules/declaration-block-single-line-max-declarations"),
  "declaration-block-trailing-semicolon": require("stylelint/lib/rules/declaration-block-trailing-semicolon"),
  "declaration-colon-newline-after": require("stylelint/lib/rules/declaration-colon-newline-after"),
  "declaration-colon-space-after": require("stylelint/lib/rules/declaration-colon-space-after"),
  "declaration-colon-space-before": require("stylelint/lib/rules/declaration-colon-space-before"),
  "declaration-empty-line-before": require("stylelint/lib/rules/declaration-empty-line-before"),
  "declaration-no-important": require("stylelint/lib/rules/declaration-no-important"),
  "declaration-property-unit-blacklist": require("stylelint/lib/rules/declaration-property-unit-blacklist"),
  "declaration-property-unit-whitelist": require("stylelint/lib/rules/declaration-property-unit-whitelist"),
  "declaration-property-value-blacklist": require("stylelint/lib/rules/declaration-property-value-blacklist"),
  "declaration-property-value-whitelist": require("stylelint/lib/rules/declaration-property-value-whitelist"),
  "font-family-no-missing-generic-family-keyword": require("stylelint/lib/rules/font-family-no-missing-generic-family-keyword"),
  "font-family-name-quotes": require("stylelint/lib/rules/font-family-name-quotes"),
  "font-family-no-duplicate-names": require("stylelint/lib/rules/font-family-no-duplicate-names"),
  "font-weight-notation": require("stylelint/lib/rules/font-weight-notation"),
  "function-blacklist": require("stylelint/lib/rules/function-blacklist"),
  "function-calc-no-invalid": require("stylelint/lib/rules/function-calc-no-invalid"),
  "function-calc-no-unspaced-operator": require("stylelint/lib/rules/function-calc-no-unspaced-operator"),
  "function-comma-newline-after": require("stylelint/lib/rules/function-comma-newline-after"),
  "function-comma-newline-before": require("stylelint/lib/rules/function-comma-newline-before"),
  "function-comma-space-after": require("stylelint/lib/rules/function-comma-space-after"),
  "function-comma-space-before": require("stylelint/lib/rules/function-comma-space-before"),
  "function-linear-gradient-no-nonstandard-direction": require("stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction"),
  "function-max-empty-lines": require("stylelint/lib/rules/function-max-empty-lines"),
  "function-name-case": require("stylelint/lib/rules/function-name-case"),
  "function-parentheses-newline-inside": require("stylelint/lib/rules/function-parentheses-newline-inside"),
  "function-parentheses-space-inside": require("stylelint/lib/rules/function-parentheses-space-inside"),
  "function-url-no-scheme-relative": require("stylelint/lib/rules/function-url-no-scheme-relative"),
  "function-url-quotes": require("stylelint/lib/rules/function-url-quotes"),
  "function-url-scheme-blacklist": require("stylelint/lib/rules/function-url-scheme-blacklist"),
  "function-url-scheme-whitelist": require("stylelint/lib/rules/function-url-scheme-whitelist"),
  "function-whitelist": require("stylelint/lib/rules/function-whitelist"),
  "function-whitespace-after": require("stylelint/lib/rules/function-whitespace-after"),
  "keyframe-declaration-no-important": require("stylelint/lib/rules/keyframe-declaration-no-important"),
  "keyframes-name-pattern": require("stylelint/lib/rules/keyframes-name-pattern"),
  "length-zero-no-unit": require("stylelint/lib/rules/length-zero-no-unit"),
  linebreaks: require("stylelint/lib/rules/linebreaks"),
  "max-empty-lines": require("stylelint/lib/rules/max-empty-lines"),
  "max-line-length": require("stylelint/lib/rules/max-line-length"),
  "max-nesting-depth": require("stylelint/lib/rules/max-nesting-depth"),
  "media-feature-colon-space-after": require("stylelint/lib/rules/media-feature-colon-space-after"),
  "media-feature-colon-space-before": require("stylelint/lib/rules/media-feature-colon-space-before"),
  "media-feature-name-blacklist": require("stylelint/lib/rules/media-feature-name-blacklist"),
  "media-feature-name-case": require("stylelint/lib/rules/media-feature-name-case"),
  "media-feature-name-no-unknown": require("stylelint/lib/rules/media-feature-name-no-unknown"),
  "media-feature-name-no-vendor-prefix": require("stylelint/lib/rules/media-feature-name-no-vendor-prefix"),
  "media-feature-name-value-whitelist": require("stylelint/lib/rules/media-feature-name-value-whitelist"),
  "media-feature-name-whitelist": require("stylelint/lib/rules/media-feature-name-whitelist"),
  "media-feature-parentheses-space-inside": require("stylelint/lib/rules/media-feature-parentheses-space-inside"),
  "media-feature-range-operator-space-after": require("stylelint/lib/rules/media-feature-range-operator-space-after"),
  "media-feature-range-operator-space-before": require("stylelint/lib/rules/media-feature-range-operator-space-before"),
  "media-query-list-comma-newline-after": require("stylelint/lib/rules/media-query-list-comma-newline-after"),
  "media-query-list-comma-newline-before": require("stylelint/lib/rules/media-query-list-comma-newline-before"),
  "media-query-list-comma-space-after": require("stylelint/lib/rules/media-query-list-comma-space-after"),
  "media-query-list-comma-space-before": require("stylelint/lib/rules/media-query-list-comma-space-before"),
  "no-descending-specificity": require("stylelint/lib/rules/no-descending-specificity"),
  "no-duplicate-at-import-rules": require("stylelint/lib/rules/no-duplicate-at-import-rules"),
  "no-duplicate-selectors": require("stylelint/lib/rules/no-duplicate-selectors"),
  "no-empty-source": require("stylelint/lib/rules/no-empty-source"),
  "no-empty-first-line": require("stylelint/lib/rules/no-empty-first-line"),
  "no-eol-whitespace": require("stylelint/lib/rules/no-eol-whitespace"),
  "no-extra-semicolons": require("stylelint/lib/rules/no-extra-semicolons"),
  "no-invalid-double-slash-comments": require("stylelint/lib/rules/no-invalid-double-slash-comments"),
  "no-missing-end-of-source-newline": require("stylelint/lib/rules/no-missing-end-of-source-newline"),
  "no-unknown-animations": require("stylelint/lib/rules/no-unknown-animations"),
  "number-leading-zero": require("stylelint/lib/rules/number-leading-zero"),
  "number-max-precision": require("stylelint/lib/rules/number-max-precision"),
  "number-no-trailing-zeros": require("stylelint/lib/rules/number-no-trailing-zeros"),
  "property-blacklist": require("stylelint/lib/rules/property-blacklist"),
  "property-case": require("stylelint/lib/rules/property-case"),
  "property-no-unknown": require("stylelint/lib/rules/property-no-unknown"),
  "property-no-vendor-prefix": require("stylelint/lib/rules/property-no-vendor-prefix"),
  "property-whitelist": require("stylelint/lib/rules/property-whitelist"),
  "rule-empty-line-before": require("stylelint/lib/rules/rule-empty-line-before"),
  "selector-attribute-brackets-space-inside": require("stylelint/lib/rules/selector-attribute-brackets-space-inside"),
  "selector-attribute-operator-blacklist": require("stylelint/lib/rules/selector-attribute-operator-blacklist"),
  "selector-attribute-operator-space-after": require("stylelint/lib/rules/selector-attribute-operator-space-after"),
  "selector-attribute-operator-space-before": require("stylelint/lib/rules/selector-attribute-operator-space-before"),
  "selector-attribute-operator-whitelist": require("stylelint/lib/rules/selector-attribute-operator-whitelist"),
  "selector-attribute-quotes": require("stylelint/lib/rules/selector-attribute-quotes"),
  "selector-class-pattern": require("stylelint/lib/rules/selector-class-pattern"),
  "selector-combinator-blacklist": require("stylelint/lib/rules/selector-combinator-blacklist"),
  "selector-combinator-space-after": require("stylelint/lib/rules/selector-combinator-space-after"),
  "selector-combinator-space-before": require("stylelint/lib/rules/selector-combinator-space-before"),
  "selector-combinator-whitelist": require("stylelint/lib/rules/selector-combinator-whitelist"),
  "selector-descendant-combinator-no-non-space": require("stylelint/lib/rules/selector-descendant-combinator-no-non-space"),
  "selector-id-pattern": require("stylelint/lib/rules/selector-id-pattern"),
  "selector-list-comma-newline-after": require("stylelint/lib/rules/selector-list-comma-newline-after"),
  "selector-list-comma-newline-before": require("stylelint/lib/rules/selector-list-comma-newline-before"),
  "selector-list-comma-space-after": require("stylelint/lib/rules/selector-list-comma-space-after"),
  "selector-list-comma-space-before": require("stylelint/lib/rules/selector-list-comma-space-before"),
  "selector-max-attribute": require("stylelint/lib/rules/selector-max-attribute"),
  "selector-max-class": require("stylelint/lib/rules/selector-max-class"),
  "selector-max-combinators": require("stylelint/lib/rules/selector-max-combinators"),
  "selector-max-compound-selectors": require("stylelint/lib/rules/selector-max-compound-selectors"),
  "selector-max-empty-lines": require("stylelint/lib/rules/selector-max-empty-lines"),
  "selector-max-id": require("stylelint/lib/rules/selector-max-id"),
  "selector-max-pseudo-class": require("stylelint/lib/rules/selector-max-pseudo-class"),
  "selector-max-specificity": require("stylelint/lib/rules/selector-max-specificity"),
  "selector-max-type": require("stylelint/lib/rules/selector-max-type"),
  "selector-max-universal": require("stylelint/lib/rules/selector-max-universal"),
  "selector-nested-pattern": require("stylelint/lib/rules/selector-nested-pattern"),
  "selector-no-qualifying-type": require("stylelint/lib/rules/selector-no-qualifying-type"),
  "selector-no-vendor-prefix": require("stylelint/lib/rules/selector-no-vendor-prefix"),
  "selector-pseudo-class-blacklist": require("stylelint/lib/rules/selector-pseudo-class-blacklist"),
  "selector-pseudo-class-case": require("stylelint/lib/rules/selector-pseudo-class-case"),
  "selector-pseudo-class-no-unknown": require("stylelint/lib/rules/selector-pseudo-class-no-unknown"),
  "selector-pseudo-class-parentheses-space-inside": require("stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside"),
  "selector-pseudo-class-whitelist": require("stylelint/lib/rules/selector-pseudo-class-whitelist"),
  "selector-pseudo-element-blacklist": require("stylelint/lib/rules/selector-pseudo-element-blacklist"),
  "selector-pseudo-element-case": require("stylelint/lib/rules/selector-pseudo-element-case"),
  "selector-pseudo-element-colon-notation": require("stylelint/lib/rules/selector-pseudo-element-colon-notation"),
  "selector-pseudo-element-no-unknown": require("stylelint/lib/rules/selector-pseudo-element-no-unknown"),
  "selector-pseudo-element-whitelist": require("stylelint/lib/rules/selector-pseudo-element-whitelist"),
  "selector-type-case": require("stylelint/lib/rules/selector-type-case"),
  "selector-type-no-unknown": require("stylelint/lib/rules/selector-type-no-unknown"),
  "shorthand-property-no-redundant-values": require("stylelint/lib/rules/shorthand-property-no-redundant-values"),
  "string-no-newline": require("stylelint/lib/rules/string-no-newline"),
  "string-quotes": require("stylelint/lib/rules/string-quotes"),
  "time-min-milliseconds": require("stylelint/lib/rules/time-min-milliseconds"),
  "unicode-bom": require("stylelint/lib/rules/unicode-bom"),
  "unit-blacklist": require("stylelint/lib/rules/unit-blacklist"),
  "unit-case": require("stylelint/lib/rules/unit-case"),
  "unit-no-unknown": require("stylelint/lib/rules/unit-no-unknown"),
  "unit-whitelist": require("stylelint/lib/rules/unit-whitelist"),
  "value-keyword-case": require("stylelint/lib/rules/value-keyword-case"),
  "value-list-comma-newline-after": require("stylelint/lib/rules/value-list-comma-newline-after"),
  "value-list-comma-newline-before": require("stylelint/lib/rules/value-list-comma-newline-before"),
  "value-list-comma-space-after": require("stylelint/lib/rules/value-list-comma-space-after"),
  "value-list-comma-space-before": require("stylelint/lib/rules/value-list-comma-space-before"),
  "value-list-max-empty-lines": require("stylelint/lib/rules/value-list-max-empty-lines"),
  "value-no-vendor-prefix": require("stylelint/lib/rules/value-no-vendor-prefix"),
  indentation: require("stylelint/lib/rules/indentation") /* Placedhere for better autofixing */,
};
